from decimal import Decimal

integer_solutions = 1, 90, 45, 30, 22, 18, 15, 90, 11, 10, 9, 90, 7, 90, 45, 6, 17, 90, \
5, 90, 4, 30, 45, 90, 4, 18, 45, 10, 16, 90, 3, 90, 14, 30, 45, 18, \
2, 90, 45, 30, 2, 90, 15, 90, 2, 2, 45, 90, 2, 90, 9, 30, 19, 90, 5, \
18, 8, 30, 45, 90, 1, 90, 45, 10, 7, 18, 15, 90, 4, 30, 9, 90, 1, 90, \
45, 6, 13, 90, 15, 90, 1, 10, 45, 90, 1, 18, 45, 30, 1, 90, 1, 90, 1, \
30, 45, 18, 1, 90, 45, 10, 1, 90, 15, 90, 13, 6, 45, 90, 1, 90, 9, \
30, 4, 90, 15, 18, 7, 10, 45, 90, 1, 90, 45, 30, 8, 18, 5, 90, 19, \
30, 9, 90, 2, 90, 45, 2, 2, 90, 15, 90, 2, 30, 45, 90, 2, 18, 45, 30, \
14, 90, 3, 90, 16, 10, 45, 18, 4, 90, 45, 30, 4, 90, 5, 90, 17, 6, \
45, 90, 7, 90, 9, 10, 11, 90, 15, 18, 22, 30, 45, 90, 1, 90, 45, 30, \
22, 18, 15, 90, 11, 10, 9, 90, 7, 90, 45, 6, 17, 90, 5, 90, 4, 30, \
45, 90, 4, 18, 45, 10, 16, 90, 3, 90, 14, 30, 45, 18, 2, 90, 45, 30, \
2, 90, 15, 90, 2, 2, 45, 90, 2, 90, 9, 30, 19, 90, 5, 18, 8, 30, 45, \
90, 1, 90, 45, 10, 7, 18, 15, 90, 4, 30, 9, 90, 1, 90, 45, 6, 13, 90, \
15, 90, 1, 10, 45, 90, 1, 18, 45, 30, 1, 90, 1, 90, 1, 30, 45, 18, 1, \
90, 45, 10, 1, 90, 15, 90, 13, 6, 45, 90, 1, 90, 9, 30, 4, 90, 15, \
18, 7, 10, 45, 90, 1, 90, 45, 30, 8, 18, 5, 90, 19, 30, 9, 90, 2, 90, \
45, 2, 2, 90, 15, 90, 2, 30, 45, 90, 2, 18, 45, 30, 14, 90, 3, 90, \
16, 10, 45, 18, 4, 90, 45, 30, 4, 90, 5, 90, 17, 6, 45, 90, 7, 90, 9, \
10, 11, 90, 15, 18, 22, 30, 45, 90, 1]

t = int(input())

for _ in range(t):
    a = input()
    if "." in a:
        original_a = Decimal(a)
        pos = a.find(".")
        p_10 = len(a) - pos - 1
        a = a[:pos] + a[pos+1:]
        a = int(a)
        p_2 = 0
        p_5 = 0
        # p_2 and p_5 are the powers needed to become it an integer.
        while a%2 == 0 and p_2 < p_10:
            a //= 2
            p_2 += 1
        while a%5 == 0 and p_5 < p_10:
            a //= 5
            p_5 += 1
        p_2 = p_10 - p_2
        p_5 = p_10 - p_5
        if a%4 != 0:
            # It can be 0, just should be a*x = 90*(2i+1)
            # 90 = 2*3^2*5
            ans = 1
            if a%2 != 0:
                ans *= 2
            if a%5 != 0:
                ans *= 5
            if a%9 != 0:
                if a%3 != 0:
                    ans *= 9
                else:
                    ans *= 3
            ans *= pow(2, p_2)
            ans *= pow(5, p_5)
            print(ans)
        else:
            mini = 1
            ans = 0
            for j in range(30000):
                value = float(j*original_a)
                value = math.abs(math.cos(math.radians(value)))
                if value < mini:
                    mini = value
                    ans = j
            print(ans)
    else:
        a = int(a)
        a += 180
        print(integer_solutions[a])